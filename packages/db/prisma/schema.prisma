// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  email String
  name String?
  number String @unique
  password String
  balance Balance[]
  onRampTrans OnRampTransaction[]
  sentMoney P2PTransaction[] @relation("FromUserRelation")
  receivedMoney P2PTransaction[] @relation("ToUserRelation")
}

model Balance {
  id String @id @default(uuid())
  userId String @unique
  amount Int
  locked Int
  user User @relation(fields: [userId], references: [id])
}

model P2PTransaction {
  id String @id @default(uuid())
  amount Int
  timeStamp DateTime
  fromUserId String
  fromUser User @relation(name: "FromUserRelation", fields: [fromUserId], references: [id])
  toUserId String
  toUser User @relation(name: "ToUserRelation", fields: [toUserId], references: [id])
}

model OnRampTransaction {
  id String @id @default(uuid())
  status OnRampStatus
  token String @unique
  provider String
  amount Int
  startTime DateTime
  userId String 
  user User @relation(fields: [userId], references: [id])
}

enum OnRampStatus {
  Success
  Failure
  Processing
}
